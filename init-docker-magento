#!/bin/sh


######################################################
####		 Functions
######################################################

function createMagento {
	# Stop and Remove existing container
	if [ "$(docker ps -a | grep ${CONTAINER_NAME})" ]; then
		docker stop $CONTAINER_NAME &>/dev/null
		docker rm $CONTAINER_NAME &>/dev/null
	fi

	if [ "$MVERSION" -eq "1" ]; then
		REPO=fsspencer/magento
	else
		REPO=fsspencer/magento2
	fi

	# Create and start container
	echo "\n-------------------------------------"
	echo "Container creation response:"
	echo "-------------------------------------"
	docker run -d --name $CONTAINER_NAME -v $PROJECT_PATH:/var/www/html -p $PORT:80 $REPO
	echo "\n"

	# Get container IP Address
	M2_IPADDRESS=$(docker inspect ${CONTAINER_NAME} | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[0]["NetworkSettings"]["IPAddress"]')
	
}

function createMysql {
	# Stop and Remove existing container
	echo "\n-------------------------------------"
	echo "Mysql container response:"
	echo "-------------------------------------"
	if [ ! "$(docker ps -a | grep mysql)" ]; then
		# Create and start container
		docker stop $(docker ps | grep "3306/tcp")
		docker run -d -ti -e MYSQL_ROOT_PASSWORD="root" -p 3306:3306 --name mysql mysql
	else
		docker start mysql
	fi
	echo "\n"

	# Get container IP Address
	DB_IPADDRESS=$(docker inspect mysql | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[0]["NetworkSettings"]["IPAddress"]')
}


function createDatabase {
	docker exec -ti $CONTAINER_NAME mysql -h $DB_IPADDRESS -uroot -proot -e "DROP DATABASE IF EXISTS ${DBNAME}; CREATE DATABASE ${DBNAME};"
}


function importDatabase {
	docker exec -ti $CONTAINER_NAME mysql -h $DB_IPADDRESS -uroot -proot -e "set @@global.show_compatibility_56=ON;"
	docker exec -ti $CONTAINER_NAME mysql -h $DB_IPADDRESS -uroot -proot -e "USE ${DBNAME}; SOURCE ${SQLNAME};"
	if [ "$MVERSION" -eq "2" ]; then
		docker exec --user www-data -ti $CONTAINER_NAME n98-magerun2.phar config:store:set web/unsecure/base_url $BASE_URL
		docker exec --user www-data -ti $CONTAINER_NAME n98-magerun2.phar config:store:set web/secure/base_url $BASE_URL
		docker exec --user www-data -ti $CONTAINER_NAME n98-magerun2.phar cache:clean
	else
		docker exec --user www-data -ti $CONTAINER_NAME n98-magerun config:set web/unsecure/base_url $BASE_URL
		docker exec --user www-data -ti $CONTAINER_NAME n98-magerun config:set web/secure/base_url $BASE_URL
		docker exec --user www-data -ti $CONTAINER_NAME n98-magerun cache:clean
	fi
}

function install {
	echo "\n"

	if [ "$MVERSION" -eq "2" ]; then

		read -p "Admin Username: " ADM_USER
		read -p "Admin Password: " ADM_PWD
		read -p "Admin First Name: " ADM_FNAME
		read -p "Admin Last Name: " ADM_LNAME
		read -p "Admin Email: " ADM_EMAIL

		if [ ! -f ${PROJECT_PATH}/bin/magento ]; then
			
			echo "\n"
			rm -rf _src

			read -p "Type [ce/ee]: " M2_VERSIONTYPE
			if [ -z "$M2_VERSIONTYPE" ]; then
				M2_VERSIONTYPE="ce"
			fi
			if [ "$M2_VERSIONTYPE" = "ee" ]; then
				REPO_M2="--repository-url=https://repo.magento.com/ magento/project-enterprise-edition"
			else
				REPO_M2="magento/community-edition"
			fi

			read -p "Version Number [2.2.0]: " M2_VERSIONNUM
			docker exec --user www-data -ti $CONTAINER_NAME composer create-project ${REPO_M2}:${M2_VERSIONNUM} _src

			rsync -az --ignore-existing _src/* ./
			rm -rf _src
			
		fi

		docker exec --user www-data -ti $CONTAINER_NAME php bin/magento setup:install \
			--db-host="$DB_IPADDRESS" \
			--db-user="root" \
			--db-password="root" \
			--db-name="$DBNAME" \
			--admin-user="$ADM_USER" \
			--admin-password="$ADM_PWD" \
			--admin-firstname="$ADM_FNAME" \
			--admin-lastname="$ADM_LNAME" \
			--admin-email="$ADM_EMAIL" \
			--base-url="$BASE_URL" \
			--use-rewrites=1
		
	fi
}

######################################################
####		 User Interaction
######################################################
echo "\n"

if [ -z $(eval command -v docker) ]; then
	"Docker is not installed"
	exit 1
fi

read -p "Magento Version [1 or 2]: " MVERSION
if [ -z "$MVERSION" ]; then
	MVERSION="2"
	echo "Selected Magento 2";
fi

CONTAINER_NAME="magento${MVERSION}"

read -p "Project path [$(eval pwd)]: " PROJECT_PATH
if [ -z "$PROJECT_PATH" ]; then
	PROJECT_PATH=$(eval pwd)
fi

PROJECT_PATH=$(eval echo $PROJECT_PATH | xargs)

read -p "Port [80]: " PORT
if [ -z "$PORT" ]; then
	PORT="80"
fi

read -p "Base URL [http://dev.local/]: " BASE_URL
if [ -z "$BASE_URL" ]; then
	BASE_URL="http://dev.local/"
fi

docker stop $(docker ps | grep "${PORT}/tcp") &> /dev/null

createMagento

read -p "Create database? (Drop of exists) [Y/n]: " CREATEDB	
if [ "$CREATEDB" = "Y" ]; then

	read -p "DB Name?: " DBNAME
	if [ -z ${DBNAME} ]; then
	  echo "You need to specify a database name"
	  exit 1
	fi
	createMysql
	createDatabase

	read -p "Import database? [Y/n]: " IMPORTDB
	if [ "$IMPORTDB" = "Y" ]; then

		read -p "SQL Filename (Must be placed in ${PROJECT_PATH})?: " SQLNAME

		if [ ! -f ${PROJECT_PATH}/${SQLNAME} ]; then
	  	  echo "${PROJECT_PATH}/${SQLNAME} File not found!"
	  	  exit 1
		fi

		importDatabase
	else
		
		if [ "$MVERSION" -eq "2" ]; then
			read -p "Install Magento? [Y/n]: " INSTALLMAGE
			if [ "$INSTALLMAGE" = "Y" ]; then
				install
			fi
		fi
	fi
else
	CREATEDB=0
fi

######################################################
####		 User Output
######################################################

echo "\n-------------------------------------"
echo "Magento IP Address: ${M2_IPADDRESS}"
if [ ! $CREATEDB = 0 ]; then
	echo "MYSQL HOST: ${DB_IPADDRESS}"
	echo "MYSQL USER: root"
	echo "MYSQL PASS: root"
fi
echo "-------------------------------------"
echo "\nYou should add the following to your hosts file: \n\t0.0.0.0 your.local.url"
echo "-------------------------------------"